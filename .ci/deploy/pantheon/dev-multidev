#!/bin/bash

set -eo pipefail

#
# This script deploys the build artifact to Pantheon.
# On the master branch the dev environment is used.
# Otherwise a multidev environment is used.
#

# -----------------------------------------------------------------------------
# Set up environment
# See: https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment

CI_BRANCH=${CI_BRANCH:-$BUILD_SOURCEBRANCHNAME}
CI_BUILD_NUMBER=${CI_BUILD_NUMBER:-$BUILD_BUILDID}
CI_PROJECT_NAME=${CI_PROJECT_NAME:-$BUILD_REPOSITORY_NAME}

# Set up BASH_ENV if it was not set for us.
BASH_ENV=${BASH_ENV:-$HOME/.bashrc}

# Provide a default email address
GIT_EMAIL=${GIT_EMAIL:-$BUILD_REQUESTEDFOREMAIL}
GIT_NAME=${GIT_NAME:-$BUILD_REQUESTEDFORID}

# We will also set the default site name to be the same as the repository name.
DEFAULT_SITE=${DEFAULT_SITE:-$CI_PROJECT_NAME}
# By default, we will make the main branch master.
DEFAULT_BRANCH=${DEFAULT_BRANCH:-master}
DEFAULT_ENV=ci-$CI_BUILD_NUMBER

CI_PR_URL=${CI_PR_URL:-$CIRCLE_PULL_REQUEST}
CI_PROJECT_USERNAME=${CI_PROJECT_USERNAME:-$BUILD_REQUESTEDFORID}
CI_PROJECT_REPONAME=${CI_PROJECT_REPONAME:-$BUILD_REPOSITORY_NAME}
TERMINUS_SITE=${TERMINUS_SITE:-$DEFAULT_SITE}
TERMINUS_ENV=${TERMINUS_ENV:-$DEFAULT_ENV}
echo "##vso[task.setvariable variable=TERMINUS_ENV]${TERMINUS_ENV}"
echo "##vso[task.setvariable variable=TestQAHostname]${TERMINUS_ENV}-${TERMINUS_SITE}.pantheonsite.io"
echo "##vso[task.setvariable variable=CI_PROJECT_USERNAME]${CI_PROJECT_USERNAME}"
echo "##vso[task.setvariable variable=CI_PROJECT_REPONAME]${CI_PROJECT_REPONAME}"

# End of environment section
# -----------------------------------------------------------------------------

# Prepare for Pantheon
composer run prepare-for-pantheon

terminus -n build:env:create "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes </dev/null

# Update the Drupal database
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- updatedb -y </dev/null

# If exported configuration is available, then import it.
if [ -f "config/system.site.yml" ] ; then
  terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes </dev/null
fi

# Clear Drupal cache
terminus -n drush "$TERMINUS_SITE.$TERMINUS_ENV" -- cr </dev/null

# Clear the environment cache
terminus -n env:clear-cache $TERMINUS_SITE.$TERMINUS_ENV </dev/null

# Ensure secrets are set
terminus -n build:secrets:set "$TERMINUS_SITE.$TERMINUS_ENV" token "$DEVOPS_TOKEN" --file='devops-secrets.json' --clear --skip-if-empty </dev/null

# Apply upstream updates
terminus connection:set "$TERMINUS_SITE.$TERMINUS_ENV" git
terminus upstream:updates:apply --updatedb --accept-upstream -- "$TERMINUS_SITE.$TERMINUS_ENV"
